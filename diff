diff --git a/Makefile b/Makefile
index 366299f..3a09f6b 100644
--- a/Makefile
+++ b/Makefile
@@ -1,3 +1,8 @@
+
+CC=gcc
+
+CFLAGS+=-I./include
+
 src = list.c main.c parser.c tokenizer.c sysfun.c exec.c type.c
-tao : $(src) list.h parser.h exec.h parser_comment.h sysfun.h type.h
-	gcc $(src) -o tao
+tao : $(src)
+	$(CC) $(CFLAGS) $(src) -o tao
diff --git a/exec.h b/exec.h
deleted file mode 100644
index c21f68e..0000000
--- a/exec.h
+++ /dev/null
@@ -1,89 +0,0 @@
-#ifndef EXEC_H_INCLUDED
-#define EXEC_H_INCLUDED
-#include "type.h"
-#include "parser.h"
-
-///sysfun.c
-#define is_empty(l) ((l)->next==NULL)
-
-#define list_init_g(type) \
-do{\
-    type *not_use_tmp = malloc(sizeof(type));\
-    not_use_tmp->next=NULL;\
-    return not_use_tmp;\
-}while(0);
-
-typedef struct arg_list_t
-{
-    char *name;
-    Tao_value *obj;
-    struct arg_list_t *next;
-}obj_list,symbol_list;
-
-typedef Tao_value * (*sysfun)(obj_list *args);
-typedef struct sysfun_list_t
-{
-    char *name;
-    sysfun func;
-    struct sysfun_list_t *next;
-}sysfun_list;
-
-symbol_list * symbol_list_init(void);
-void symbol_list_kill(symbol_list *l);
-void symbol_list_add(symbol_list **l,char *name,Tao_value *obj);
-sysfun_list * sysfun_list_init(void);
-void sysfun_list_add(sysfun_list **l,char *name,sysfun func);
-void add_sysfun(sysfun_list **l);
-Tao_value *sys_print(obj_list *args);
-Tao_value *sys_input(obj_list *args);
-Tao_value *sys_int(obj_list *args);
-sysfun sysfun_find(sysfun_list *l,char *s);
-///exec.c
-typedef enum
-{
-    W_ROOT = 1,//全局
-    W_WHILE,//while
-    W_FOR,//for
-    W_FUNDEF,//fun定义
-    W_IF,//if
-    //...
-}exec_where;
-
-typedef enum
-{
-    R_BRK = 1,
-    R_CTN,
-    R_RTN,
-    R_NOR,
-}exec_stmt_result;
-
-typedef struct symbol_table_t
-{
-    symbol_list *head;
-    struct symbol_table_t *next;
-}symbol_table;
-
-typedef struct exec_status_t
-{
-    exec_where where;//处于什么语句中
-    symbol_table *env_symbol_table;//符号表
-    sysfun_list *env_sysfun_list;//系统函数表
-    //...
-    //...
-}exec_env;
-
-typedef struct
-{
-    exec_stmt_result result;
-    Tao_value *return_value;
-}exec_result;
-
-symbol_table * symbol_table_init(void);
-void symbol_table_add(symbol_table **l,symbol_list *s_head);
-exec_env *make_init_env(void);
-void exec_let(AST *ast,exec_env *status);
-exec_result exec_stmt(AST *ast,exec_env *status);
-exec_result exec_funcall(AST *ast,exec_env *env);
-exec_result cal_exp(AST *ast,exec_env *env);
-
-#endif // EXEC_H_INCLUDED
diff --git a/list.h b/list.h
deleted file mode 100644
index 23cd0a7..0000000
--- a/list.h
+++ /dev/null
@@ -1,107 +0,0 @@
-#ifndef LIST_H_INCLUDED
-#define LIST_H_INCLUDED
-
-//数据结构之列表，可以追加元素，相当于自动增长长度的数组
-typedef struct Taolist_st{
-    size_t len;
-    size_t cur;
-    size_t max_len;
-    int status;
-    void *data;//存放具体数据的数组
-}Taolist;
-
-#define Taolist_get(type,n,l)\
-        ((type)(*(((type *)l->data)+(n))))
-
-
-#define Taolist_get_addr(type,n,l)\
-        (((type *)l->data)+(n))
-
-//更新一个值
-#define Taolist_update(type,n,l,dat)\
-    do{\
-        type *not_use_tmp=(((type *)(l)->data)+(n));\
-        *(not_use_tmp) = (dat);\
-    }while(0)
-
-//在尾部添加元素，空间不够时自动扩充空间为原来的3/2
-#define Taolist_add(type,l,dat)\
-    do{\
-        if(l->len+1>l->max_len)\
-        {\
-            l->data=realloc(l->data,sizeof(type)*l->max_len+(l->max_len*3/2)*sizeof(type));\
-            l->max_len+=l->max_len*3/2;\
-        }\
-        else ; \
-        type *not_use_tmp=(((type *)l->data)+l->len);\
-        *(not_use_tmp)=(dat);\
-        l->len++;\
-    }while(0)
-
-//在中间插入一个元素
-#define Taolist_inser(type,n,dat,l)\
-    do{\
-        if(l->len+1>l->max_len)\
-        {\
-            l->data=realloc(l->data,sizeof(type)*l->max_len+(l->max_len*3/2)*sizeof(type));\
-            l->max_len+=l->max_len*3/2;\
-        }\
-        else ;\
-        for(size_t i =l->len-1;i>=n;i--)\
-        {\
-            type tmp = Taolist_get(type,i,l);\
-            Taolist_update(type,i+1,l,tmp);\
-        }\
-        type *not_use_tmp=(((type *)l->data)+n);\
-        *(not_use_tmp)=(dat);\
-        l->len++;\
-    }\
-    while(0)
-
-
-//删除一个元素，但是并不缩小空间
-#define Taolist_del(type,n,l)\
-    do{\
-        if((n)<0 || (n)>=l->len)break;\
-        for(size_t i = (n)+1;i<l->len;i++)\
-        {\
-            type tmp = Taolist_get(type,i,l);\
-            Taolist_update(type,i-1,l,tmp);\
-        }\
-        l->len--;\
-    }while(0)
-
-//删除最后一个元素，但是并不缩小空间
-#define Taolist_pop(l)\
-    do{\
-        l->len--;\
-    }while(0)
-
-//删除所有元素，但是并不释放空间
-#define Taolist_clear(l)\
-    do{\
-        l->len=0;\
-    }while(0)
-
-//交换两个位置的数据
-#define Taolist_swap(type,n1,n2,l)\
-    do{\
-        type tmp1 = Taolist_get(type,n1,l);\
-        type tmp2 = Taolist_get(type,n2,l);\
-        Taolist_update(type,n1,l,tmp2);\
-        Taolist_update(type,n2,l,tmp1);\
-    }while(0)
-
-
-//克隆一个列表
-Taolist * Taolist_clone_fun(const Taolist *src,int data_len);
-#define Taolist_clone(l,type) Taolist_clone_fun(l,sizeof(type))
-
-//初始化列表一个
-Taolist * init_Taolist_fun(int len,int data_len);
-#define Taolist_init(type,init_len) init_Taolist_fun(init_len,sizeof(type))
-
-void test_Taolist();
-void Taolist_kill(Taolist *l);
-
-#endif // LIST_H_INCLUDED
diff --git a/main.c b/main.c
index aa2d680..23456b0 100644
--- a/main.c
+++ b/main.c
@@ -4,34 +4,37 @@
 #include "list.h"
 #include "exec.h"
 
-int test_a_file(char *s)
+int test_a_file(char *s, int debug)
 {
     //Taolist *x = file_to_token_list("test/primer.tao");
     Taolist *x = file_to_token_list(s);
-    puts("token:");
-    if(x!=NULL)print_token_l(x);
+    if(debug) puts("token:");
+    if(debug) if(x!=NULL)print_token_l(x);
     if(x->status==-1)puts("note: tokenizer has error !");
-    puts("");
+    if(debug) puts("");
     AST *A = build_root_stmt(x,A_STMT);
     if(!PARSER_STATUS.IS_RIGHT)puts("note: parser has error !");
-    puts("\nAST:");
-    if(A!=NULL)AST_print(A,0,0);
+    if(debug) puts("\nAST:");
+    if(debug) if(A!=NULL)AST_print(A,0,0);
 
     if(PARSER_STATUS.IS_RIGHT)
     {
-        puts("\ninterpret:");
+        if(debug) puts("\ninterpret:");
         exec_env *env = make_init_env();
         exec_stmt(A,env);
     }else
     {
-        puts("\nparser error , so will not intepret!");
+        if(debug) puts("\nparser error , so will not intepret!");
     }
     return 0;
 }
 
-int main(void)
+int main(int argc, char **argv)
 {
-    //test_a_file("test/primer.tao");
-    test_a_file("test/003.tao");
+    int debug = 0;
+    if(argc >= 3 && 0 == strcmp(argv[2], "-D")){
+        debug = 1;
+    }
+    test_a_file(argv[1], debug);
     return 0;
 }
diff --git a/parser.h b/parser.h
deleted file mode 100644
index 003371f..0000000
--- a/parser.h
+++ /dev/null
@@ -1,209 +0,0 @@
-#ifndef PARSER_H_INCLUDED
-#define PARSER_H_INCLUDED
-#include <string.h>
-#include "list.h"
-
-#define is_white(ch) (((ch)=='\t' || (ch)==' ' || (ch)=='\r' || (ch)=='\f')?1:0)
-
-//for tokenizer.c && parser.c
-
-typedef enum
-{
-    OP0,
-    OP1=10,
-    OP2,
-    OP3,
-    OP4,
-    OP5,
-    OP6,
-    OP7,
-    OP8,
-    OP9,
-    OP10,
-}priority;
-
-typedef enum
-{
-    IN_ROOT=1,
-    IN_WHILE,
-    IN_IF,
-    IN_FOR,
-}stmt_place;
-
-typedef struct
-{
-    int IS_RIGHT;
-}parser_status;
-
-extern parser_status PARSER_STATUS;
-
-typedef enum
-{
-    T_ERROR =1,
-    T_INT,          // 89
-    T_FLOAT,        // 3.14
-    T_ASSIGN,       // =
-    T_VISIT,        // .
-    T_SVISIT,       // :
-    T_STRING,       // "
-    T_COMMA,        // ,
-    T_SEMI,         // ;
-    T_SEMI_N,       // \n
-    T_LPAR,         // (
-    T_RPAR,         // )
-    T_LSQB,         // [
-    T_RSQB,         // ]
-    T_LBRACE,       // {
-    T_RBRACE,       // }
-    T_ADD,          // +
-    T_MINUS,        // -
-    T_STAR,         // *
-    T_SLASH,        // /
-    T_PERSENT,      // %
-    T_TWOSTAR,      // **
-    T_LESS,         // <
-    T_MORE,         // >
-    T_LESSEQ,       // <=
-    T_MOREEQ,       // >=
-    T_EQUAL,        // ==
-    T_NOTEQUAL,     // !=
-    T_TO,           // =>
-    T_OR,           // ||
-    T_AND,          // &&
-    T_NOT,          // !
-    T_LAMBDA,       // lambda
-    T_NULL,         // null
-    T_LET,          // let
-    T_TRUE,         // true
-    T_FALSE,        // false
-    T_DEF,          // def
-    T_RTN,          // return
-    T_CLASS,        // class
-    T_CTN,          // continue
-    T_BRK,          // break
-    T_TRY,          // try
-    T_CATCH,        // catch
-    T_THROW,        // throw
-    T_IF,           // if
-    T_ELIF,         // elif
-    T_ELSE,         // else
-    T_WHILE,        // while
-    T_FOR,          // for
-    T_DO,           // do
-    T_IN,           // in
-    T_IDEN,         // variabel
-    T_END,          // file end
-} token_type;
-
-typedef enum
-{
-    A_NIL = 1,
-    A_ERROR,
-    A_STMT,
-    A_LET,          // let
-    A_IF,           // if
-    A_WHILE,        // while
-    A_FOR,          // for
-    //A_BOOL_EXP,     // bool表达式
-    A_EXP,      // 数值表达式
-    A_RTN,          // return
-    A_CTN,          // continue
-    A_BRK,          // break
-    A_TRY,          // try-catch
-    A_INT,          // int
-    A_FLOAT,        // float
-    A_STR,        //
-    A_TRUE,
-    A_FALSE,
-    A_IDEN,
-    A_VISIT,
-    A_ASSIGN,       // =
-    A_ADD,          // +
-    A_RED,          // -
-    A_MINUS,
-    A_TWOSTAR,
-    A_MUL,          // *
-    A_DIV,          // /
-    A_MOD,          // %
-    A_BIGER,        // >
-    A_BIGEREQ,      // >=
-    A_SMALLER,      // <
-    A_SMALLEREQ,    // <=
-    A_NOTEQ,
-    A_NOT,
-    A_EQUAL,        // ==
-    A_OR,        // or
-    A_AND,        // and
-    A_FUNCALL,      // print();
-    A_FUNDEF,       // def
-    A_ARGV,
-    A_ARGS,
-    A_END,
-}AST_type;
-
-extern char *AST_comment[];
-extern char *token_name[];
-
-typedef struct
-{
-    token_type type;//token类型
-    priority pri;  //优先级或者分类，语法分析会用到
-    int line;       //行号，错误提示
-    char *content;  //内容
-} token;
-
-typedef struct
-{
-    long int len;
-    char *cur;
-    long int line;
-    char str[0];
-} file_string;
-
-typedef struct
-{
-    AST_type type;
-    char *content;
-    int line;
-    Taolist *child;
-}AST;
-
-
-token_type which_keyword(const char *);
-void print_token(token *);
-file_string * file_into_string(FILE *fp);
-long int get_file_size(FILE *fp);
-void jmp_useless(file_string *fs);
-token get_a_token(file_string *fs);
-void add_char_to_str(char **s,char ch);
-void print_token_l(Taolist * l);
-Taolist * file_to_token_list(const char *fname);
-token * get_token(int n,int i,Taolist *l);
-
-void AST_print(AST *t,int where_i,int);
-void AST_free(AST *a);
-void goto_next_stmt(Taolist *t);
-
-AST * build_root_stmt(Taolist *t,AST_type where);
-AST * build_stmt(Taolist *t,AST_type where);
-AST * build_let_stmt(Taolist *t);
-AST * build_if_stmt(Taolist *t);
-AST * build_while_stmt(Taolist *t);
-AST * build_assign_stmt(Taolist *t);
-AST * build_assign_stmt_1(Taolist *t);
-AST * build_assign_stmt_2(Taolist *t,token *cur,token *next);
-AST *build_fun_args(Taolist *t);
-AST *build_fun_def_stmt(Taolist *t);
-
-AST * build_iden_exp(Taolist *);
-AST * build_exp(Taolist *t);
-AST * build_bool_exp(Taolist *t);
-AST * build_com_exp(Taolist *t);
-AST * build_num_exp(Taolist *t);
-AST * build_sin_exp(Taolist *t);
-AST * build_top_exp(Taolist *t);
-AST * build_start_call_exp(Taolist *t);
-AST * build_call_exp(Taolist *t);
-AST * build_fun_exp(Taolist *t);
-AST * build_argv_exp(Taolist *t);
-#endif // PARSER_H_INCLUDED
diff --git a/parser_comment.h b/parser_comment.h
deleted file mode 100644
index 34ad184..0000000
--- a/parser_comment.h
+++ /dev/null
@@ -1,109 +0,0 @@
-#ifndef PARSER_COMMENT_H_INCLUDED
-#define PARSER_COMMENT_H_INCLUDED
-
-char *AST_comment[]=
-{
-    "",
-    "nil",
-    "error",
-    "stmt",
-    "let",
-    "if",
-    "while",
-    "for",
-    "exp",
-    "return",
-    "continue",
-    "break",
-    "try",
-    "int",
-    "float",
-    "str",
-    "true",
-    "false",
-    "iden",
-    "visit.",
-    "=",
-    "+",
-    "-",
-    "(-)",
-    "**",
-    "*",
-    "/",
-    "%",
-    ">",
-    ">=",
-    "<",
-    "<=",
-    "!=",
-    "not",
-    "==",
-    "||",
-    "&&",
-    "func",
-    "def",
-    "argv",
-    "args",
-    "end",
-};
-
-char *token_name[]=
-{
-    "t_error1",
-    "t_error2",
-    "int",
-    "float",
-    "=",
-    ".",
-    ":",
-    "str",
-    ",",
-    ";",
-    "\\n",
-    "(",
-    ")",
-    "[",
-    "]",
-    "{",
-    "}",
-    "+",
-    "-",
-    "*",
-    "/",
-    "%",
-    "**",
-    "<",
-    ">",
-    "<=",
-    ">=",
-    "==",
-    "!=",
-    "=>",
-    "||",
-    "&&",
-    "!",
-    "lambda",
-    "null",
-    "let",
-    "true",
-    "false",
-    "def",
-    "return",
-    "class",
-    "continue",
-    "break",
-    "try",
-    "catch",
-    "throw",
-    "if",
-    "elif",
-    "else",
-    "while",
-    "for",
-    "do",
-    "in",
-    "iden",
-    "file_end",
-};
-
-#endif // PARSER_COMMENT_H_INCLUDED
diff --git a/sysfun.c b/sysfun.c
index eda69bf..c622fbf 100644
--- a/sysfun.c
+++ b/sysfun.c
@@ -90,7 +90,7 @@ Tao_value *sys_print(obj_list *args)
             printf("%f",args->obj->value.float_value.val);
         break;
         case C_BOOL:
-            printf(args->obj->value.bool_value.val==0?"false":"true");
+            printf(args->obj->value.bool_value.val==0?"False":"True");
         break;
         case C_STR:
             printf("%s",args->obj->value.str_value.val);
diff --git a/type.h b/type.h
deleted file mode 100644
index 5d37f11..0000000
--- a/type.h
+++ /dev/null
@@ -1,51 +0,0 @@
-#ifndef TYPE_H_INCLUDED
-#define TYPE_H_INCLUDED
-
-typedef enum
-{
-    C_INT = 1,
-    C_BOOL,
-    C_FLOAT,
-    C_STR,
-    C_NONE,
-    C_USEROBJ,
-}value_type;
-
-typedef struct
-{
-    long val;
-}bn_int;
-
-typedef struct
-{
-    double val;
-}bn_float;
-
-typedef struct
-{
-    char *val;
-    size_t len;
-}bn_str;
-
-typedef struct
-{
-    int val;
-}bn_bool;
-
-typedef struct
-{
-    value_type type;
-    union
-    {
-        bn_int int_value;
-        bn_str str_value;
-        bn_float float_value;
-        bn_bool bool_value;
-    }value;
-}Tao_value;
-
-Tao_value *new_str(char *a);
-Tao_value *new_int(long a);
-Tao_value *new_float(double a);
-Tao_value *new_bool(int a);
-#endif // TYPE_H_INCLUDED
